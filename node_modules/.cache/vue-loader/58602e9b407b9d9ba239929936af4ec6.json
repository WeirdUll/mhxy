{"remainingRequest":"/Users/liyulong/项目/备份/mhxy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyulong/项目/备份/mhxy/src/views/dashboard/admin/index.vue?vue&type=style&index=0&id=a361ec26&lang=scss&scoped=true&","dependencies":[{"path":"/Users/liyulong/项目/备份/mhxy/src/views/dashboard/admin/index.vue","mtime":1692525758199},{"path":"/Users/liyulong/项目/备份/mhxy/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyulong/项目/备份/mhxy/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liyulong/项目/备份/mhxy/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liyulong/项目/备份/mhxy/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyulong/项目/备份/mhxy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyulong/项目/备份/mhxy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYiB7CiAgcGFkZGluZzogMjBweCAxMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKfQouZWwtdGFibGUgewogIHBhZGRpbmc6IDAgMTBweDsKICA6OnYtZGVlcCAuZWwtdGFibGVfX2JvZHktd3JhcHBlciB7CiAgICBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTcwcHgpOwogICAgb3ZlcmZsb3cteTogYXV0bzsKICB9Cn0KLm5pY2tOYW1lIHsKICBkaXNwbGF5OiBmbGV4OwogIC5uaWNrTmFtZS1idXR0b24gewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard/admin","sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n    <div class=\"tab\">\n      <el-button type=\"primary\" @click.native.prevent=\"bindDevice\"\n        >绑定设备</el-button\n      >\n    </div>\n    <el-table :data=\"tableData\" style=\"width: 100%\">\n      <el-table-column prop=\"deviceId\" label=\"设备号\"> </el-table-column>\n      <el-table-column prop=\"deviceName\" label=\"设备名称\"> </el-table-column>\n      <el-table-column prop=\"taskTips\" label=\"状态\"> </el-table-column>\n      <el-table-column prop=\"lastChannelTime\" label=\"时间\"> </el-table-column>\n      <el-table-column prop=\"ip\" label=\"IP\"> </el-table-column>\n      <el-table-column prop=\"nickName\" label=\"别名\">\n        <template slot-scope=\"scope\">\n          <div class=\"nickName\">\n            <div\n              v-if=\"!(isEditNickName && scope.row.deviceId == deviceId)\"\n              class=\"test\"\n            >\n              {{ scope.row.nickName }}\n            </div>\n            <div\n              v-if=\"isEditNickName && scope.row.deviceId == deviceId\"\n              class=\"input-nickName\"\n            >\n              <el-input\n                v-model=\"input\"\n                placeholder=\"请输入内容\"\n                @blur=\"renewNickName(scope.row.id)\"\n              ></el-input>\n            </div>\n            <div class=\"nickName-button\">\n              <i\n                class=\"el-icon-edit\"\n                @click=\"modifyNickName(scope.row.nickName, scope.row.deviceId)\"\n              ></i>\n            </div>\n          </div>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"address\" label=\"总数(已完成)\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.accountSize }}({{ scope.row.todayFinishSize }})\n        </template>\n      </el-table-column>\n      <!-- <el-table-column prop=\"address\" label=\"版本\"> </el-table-column> -->\n      <el-table-column label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button\n            @click.native.prevent=\"\n              editingRemoteFiles(scope.row.id, scope.row.deviceId)\n            \"\n            type=\"text\"\n            size=\"small\"\n          >\n            编辑远程文件\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog\n      title=\"绑定设备\"\n      :visible.sync=\"dialogVisible\"\n      width=\"30%\"\n      :before-close=\"handleClose\"\n    >\n      <el-input\n        v-model=\"deviceNum\"\n        placeholder=\"请输入设备脚本端提供的code码\"\n      ></el-input>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"bondedDevices\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { getDeviceList, updateDeviceNickName, bindDevice } from \"@/api/device\";\nexport default {\n  name: \"DashboardAdmin\",\n  components: {},\n  data() {\n    return {\n      tableData: [],\n      dialogVisible: false,\n      deviceNum: \"\",\n      input: \"\",\n      isEditNickName: false,\n      deviceId: \"\",\n    };\n  },\n  watch: {\n    dialogVisible: {\n      handler: function (newval, oldval) {\n        if (!newval) {\n          this.deviceNum = \"\";\n        }\n      },\n    },\n  },\n  mounted() {\n    this.deviceList();\n  },\n  methods: {\n    bondedDevices() {\n      bindDevice({deviceCode:this.deviceNum}).then((response) => {\n        this.dialogVisible = false;\n        this.$message({\n          message: '绑定成功',\n          type: 'success'\n        });\n        this.deviceList();\n      });\n    },\n    editingRemoteFiles(id, deviceId) {\n      console.log(id);\n      this.$router.push({\n        path: \"/dashboard/remote-files\",\n        query: { data: id, deviceId: deviceId },\n      });\n    },\n    //获取设备列表\n    deviceList() {\n      getDeviceList().then((response) => {\n        this.tableData = response.data;\n      });\n    },\n    bindDevice() {\n      this.dialogVisible = true;\n    },\n    handleClose(done) {\n      this.dialogVisible = false;\n    },\n    modifyNickName(val, deviceId) {\n      this.isEditNickName = true;\n      this.deviceId = deviceId;\n      this.input = val;\n    },\n    renewNickName(id) {\n      updateDeviceNickName({ deviceId: id, nickName: this.input }).then(\n        (response) => {\n          this.isEditNickName = false;\n          this.deviceList();\n        }\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.tab {\n  padding: 20px 10px;\n  display: flex;\n  justify-content: flex-end;\n}\n.el-table {\n  padding: 0 10px;\n  ::v-deep .el-table__body-wrapper {\n    max-height: calc(100vh - 170px);\n    overflow-y: auto;\n  }\n}\n.nickName {\n  display: flex;\n  .nickName-button {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n  }\n}\n</style>\n"]}]}